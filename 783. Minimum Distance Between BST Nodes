# Minimum Distance Between BST Nodes
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def minDiffInBST(self, root: Optional[TreeNode]) -> int:

        prev_node, result = None, float('inf')

        def dfs(node):
            if not node:
                return 

            dfs(node.left)
            nonlocal prev_node, result
            
            if prev_node:
                result = min(result, node.val - prev_node.val)
            
            prev_node = node

            dfs(node.right)

        dfs(root)
        return result
