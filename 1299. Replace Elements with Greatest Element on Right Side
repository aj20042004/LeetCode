Solution 1:
// Replace Elements with Greatest Element on Right Side
class Solution {
public:
    vector<int> replaceElements(vector<int>& arr) {
        
        int max = 0;

        for (int i = 0; i < arr.size(); i++) {

            if (i == arr.size() - 1) {
                arr[i] = -1;
            }

            for (int j = i +1; j < arr.size(); j++) {

                if (arr[j] > max) {
                    max = arr[j];
                    arr[i] = max;
                }
            }

            max = 0;
        }

        return arr;
    }
}; // Time Complexity: O(N^2)


Solution 2:
// Replace Elements with Greatest Element on Right Side
class Solution {
public:
    vector<int> replaceElements(vector<int>& arr) {
        
        // Initializing with -1 because the last element is always -1
        int right_max = -1;

        // Iterating the vector in reverse order
        for (int i = arr.size() - 1; i >= 0; i-- ) {
            
            int new_max = max(arr[i],right_max);
            arr[i] = right_max ;
            right_max = new_max;

        }

        return arr;
        
    } // Time Complexity: O(N)
};

