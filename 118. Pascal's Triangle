// Pascal's Triangle
class Solution {
public:
    vector<vector<int>> generate(int numRows) {

        vector<vector<int>> pascalTriangle;

        if (numRows == 0) {return pascalTriangle;}

        if (numRows == 1) {return {{1}};}

        pascalTriangle.push_back({1});

        for (int j = 1; j < numRows; j++) {

            vector<int> eachRow;
            vector<int> previousRow = pascalTriangle[j-1];
            
            // Append 1 at the Start of each row
            eachRow.push_back(1);

            // Need to Appned the middle values
            for (int i = 1; i < j; i++) {
                eachRow.push_back(previousRow[i-1]+previousRow[i]);
            }

            // Append 1 at the end of array
            eachRow.push_back(1);
            pascalTriangle.push_back(eachRow);

        }

        return pascalTriangle;
    }
};  // Time complexity: O(N^2)
