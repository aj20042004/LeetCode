# Backspace String Compare
class Solution(object):
    def backspaceCompare(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        # Defining the helper function to help find the next valid character
        def nextValidChar(str,index):
            
            # Keeps track of backspaces need to perform 
            backspace = 0

            while index >= 0:
                if backspace == 0 and str[index] != "#":
                    break
                elif str[index] == "#":
                    backspace += 1
                else:
                    backspace -= 1
                index -= 1
            
            # Returning the index of valid character
            return index
        
        # Initializing the variable to the end of the string
        index_s , index_t = len(s) - 1, len(t) - 1
        while index_s >= 0 or index_t >= 0:

            index_s = nextValidChar(s,index_s)
            index_t = nextValidChar(t,index_t)

            char_s = s[index_s] if index_s >= 0 else ""
            char_t = t[index_t] if index_t >= 0 else ""

            if char_s != char_t:
                return False

            index_s -= 1 
            index_t -= 1
        
        return True
