Solution 1:
// Maximum Difference Between Increasing Elements
class Solution {
public:
    int maximumDifference(vector<int>& nums) {

        int max_val = -1;

        for (int i = 0; i < nums.size(); i++) {
            for (int j = i+1; j < nums.size(); j++) {

                int result = nums[j] - nums[i];

                if ( (nums[j] > nums[i]) && (result > max_val) ) {max_val = result;}
            }
        }

        return max_val;
    }
}; Time Complexity: O(n^2)

Solution 2:
// Maximum Difference Between Increasing Elements
class Solution {
public:
    int maximumDifference(vector<int>& nums) {
        
        int min_val = nums[0];
        int max_val = -1;

        for (int j = 1; j < nums.size(); j++) {
        
            if (nums[j] > min_val) {
                max_val = max(max_val, nums[j]- min_val);
            }
            else {
                min_val = nums[j];
            }
        }

        return max_val;
    }
};
